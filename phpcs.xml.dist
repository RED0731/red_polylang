<?xml version="1.0"?>
<ruleset name="Polylang">
	<description>Coding standards for Polylang</description>

	<rule ref="WordPress-Core">
		<exclude name="WordPress.WP.PreparedSQL.NotPrepared" /><!-- TEMPORARY -->
		<exclude name="WordPress.PHP.StrictInArray.MissingTrueStrict" />
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCase"/>
		<exclude name="WordPress.NamingConventions.ValidHookName.UseUnderscores"/>
		<exclude name="WordPress.Arrays.ArrayDeclarationSpacing.AssociativeKeyFound"/>
		<exclude name="WordPress.WP.I18n.UnorderedPlaceholdersText"/><!-- Would be great to follow but I don't want to mess translations for that -->
		<exclude name="Squiz.PHP.DisallowMultipleAssignments.Found"/>
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace"/>
	</rule>

	<rule ref="Generic.WhiteSpace.ScopeIndent.Incorrect">
		<exclude-pattern>*/tests/plugins/*</exclude-pattern>
		<exclude-pattern>*/tests/themes/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.LowLevelTranslationFunction">
		<exclude-pattern>*/include/api.php</exclude-pattern>
		<exclude-pattern>*/include/mo.php</exclude-pattern>
		<exclude-pattern>*/include/olt-manager.php</exclude-pattern>
		<exclude-pattern>*/settings/table-string.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularStringLiteralText">
		<exclude-pattern>*/include/api.php</exclude-pattern>
		<exclude-pattern>*/include/mo.php</exclude-pattern>
		<exclude-pattern>*/include/olt-manager.php</exclude-pattern>
		<exclude-pattern>*/settings/table-string.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularStringLiteralContext">
		<exclude-pattern>*/include/olt-manager.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularStringLiteralDomain">
		<exclude-pattern>*/include/olt-manager.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid">
		<exclude-pattern>*/include/api.php</exclude-pattern><!-- For PLL() -->
	</rule>

	<rule ref="Generic.PHP.NoSilencedErrors.Discouraged" >
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPress-Docs">
		<exclude name="Squiz.Commenting.FileComment.Missing"/>
		<exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen"/>
		<exclude name="Squiz.Commenting.FileComment.MissingPackageTag"/>
		<exclude name="Squiz.Commenting.FileComment.WrongStyle"/>
		<exclude name="Squiz.Commenting.VariableComment.Missing"/>
		<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
		<exclude name="Squiz.Commenting.InlineComment.SpacingAfter"/>
		<exclude name="Squiz.Commenting.VariableComment.WrongStyle"/>
		<exclude name="Generic.Commenting.Fixme.TaskFound"/>
		<exclude name="Generic.Commenting.DocComment.ShortNotCapital"/>
		<exclude name="Generic.Commenting.DocComment.LongNotCapital"/>
		<exclude name="Generic.Commenting.DocComment.SpacingBeforeTags"/>
		<exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
		<exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace"/>
	</rule>

	<rule ref="Squiz.Commenting.ClassComment.Missing" >
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment.Missing" >
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment.WrongStyle" >
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<rule ref="Generic.Commenting.Fixme.CommentFound" >
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<exclude-pattern>coverage/*</exclude-pattern>
	<exclude-pattern>tests/phpunit/includes/speed-trap-listener.php</exclude-pattern>
	<exclude-pattern>js/*.min.js</exclude-pattern>

	<!-- Specific to Polylang -->
	<exclude-pattern>install/plugin-updater.php</exclude-pattern>
	<exclude-pattern>include/widget-calendar.php</exclude-pattern>
</ruleset>
